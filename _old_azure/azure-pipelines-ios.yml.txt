trigger:
  branches:
    include:
      - master

variables:
  - group: OlasInternational_RN # Cambia esto al nombre que hayas configurado

pool:
  vmImage: 'macos-latest'

steps:
  - checkout: self
    persistCredentials: true
    clean: true
  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '18.20.0' # Puedes usar la versión que desees
  - script: yarn install
    displayName: Install Dependencies
  - script: |
      # Deshabilitar autocommit en el aumento de versión 
      yarn config set version-sign-git-tag false
      yarn config set version-git-tag false
      yarn config set version-commit-hooks false
      # Extraer la versión existente de package.json
      oldVer=$(jq -r ".version" package.json)
      # Aumentar versión
      yarn version --patch
      # Añadir versión aumentada a staging
      git add *
      # Extraer nueva versión de package.json
      newVer=$(jq -r ".version" package.json)
      # Establecer variables de entorno
      echo "##vso[task.setvariable variable=OLD_VERSION]$oldVer"
      echo "##vso[task.setvariable variable=NEW_VERSION]$newVer"
    displayName: 'Bump version and set variables'

  # Bump iOS version
  - task: ios-bundle-version@1
    displayName: 'Bump iOS version'
    inputs:
      sourcePath: 'ios/OlasInternationalRN/Info.plist'
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildId)'
      versionName: '$(NEW_VERSION)'
      printFile: false

  # Instalar CocoaPods
  - task: CocoaPods@0
    displayName: 'Install CocoaPods'
    inputs:
      workingDirectory: 'ios'

  # Construcción del IPA
  - task: Xcode@5
    displayName: 'Build IPA'
    inputs:
      actions: 'build'
      configuration: 'Release'
      sdk: 'iphoneos'
      xcWorkspacePath: 'ios/OlasInternationalRN.xcworkspace'
      scheme: 'OlasInternationalRN'
      packageApp: true
      exportPath: 'output'
      signingOption: 'manual'
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'

  # Publicar IPA como artefacto
  - task: PublishBuildArtifacts@1
    displayName: 'Publish IPA to artifacts'
    inputs:
      PathtoPublish: 'output/*.ipa'
      ArtifactName: 'ios'
      publishLocation: 'Container'

  # Commits y tags
  - script: |
      tag="ios_$(NEW_VERSION)"
      echo "New tag $tag"
      git add *
      git commit -m "Update version from $(OLD_VERSION) to $(NEW_VERSION)"
      git tag $tag
      git pull --rebase origin $(Build.SourceBranchName)
      git push origin $(Build.SourceBranchName)
      git push --tags
    displayName: Bump commit
