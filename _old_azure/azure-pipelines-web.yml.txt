pr:
  branches:
    include:
      - master

variables:
  - group: OlasInternational_RN # Cambia esto al nombre que hayas configurado

pool:
  vmImage: 'macos-latest'

steps:
  - checkout: self
    persistCredentials: true
    clean: true

  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '18.20.0' # Puedes usar la versión que desees
  - script: corepack enable
    displayName: Corepack enable for yarn versions
  - script: yarn install
    displayName: Install Dependencies

  - script: |
      # Deshabilitar autocommit en el aumento de versión 
      yarn config set version-sign-git-tag false
      yarn config set version-git-tag false
      yarn config set version-commit-hooks false
      # Extraer la versión existente de package.json
      oldVer=$(jq -r ".version" package.json)
      # Aumentar versión
      yarn version --patch
      # Añadir versión aumentada a staging
      git add *
      # Extraer nueva versión de package.json
      newVer=$(jq -r ".version" package.json)
      # Establecer variables de entorno
      echo "##vso[task.setvariable variable=OLD_VERSION]$oldVer"
      echo "##vso[task.setvariable variable=NEW_VERSION]$newVer"
    displayName: 'Bump version and set variables'

  # Construcción de la versión web
  - script: |
      echo "Building web version for production..."
      yarn build:web
    displayName: 'Build Web App for Production'

  # Publicar Universal Package
  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      feedsToUsePublish: 'internal' 
      publishDirectory: '$(System.DefaultWorkingDirectory)/dist'  # Directorio de salida de la compilación
      vstsFeedPublish: 'OLASINTERNATIONAL/web-rn'  # Cambia esto al nombre de tu feed en Azure Artifacts
      vstsFeedPackagePublish: 'web-build'  # Nombre del paquete
      versionOption: 'patch' 
    displayName: 'Publicar Universal Package'
